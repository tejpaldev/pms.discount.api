server {
    listen 80;
    server_name localhost pms.yalkha.com;

    # Redirect HTTP to HTTPS if X-Forwarded-Proto is not https
    # This works with a load balancer or reverse proxy that sets X-Forwarded-Proto
    if ($http_x_forwarded_proto != "https") {
        return 301 https://$host$request_uri;
    }

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # API proxy
    location /api/discount/ {
        proxy_pass http://api:80/api/discount/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # CORS headers
        # Use $http_origin to dynamically set the Allow-Origin header
        set $cors_origin "";
        if ($http_origin ~* "^(https?://pms\.yalkha\.com)$") {
            set $cors_origin $http_origin;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Swagger UI proxy
    location /swagger/discount/ {
        proxy_pass http://api:80/swagger/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # CORS headers
        # Use $http_origin to dynamically set the Allow-Origin header
        set $cors_origin "";
        if ($http_origin ~* "^(https?://pms\.yalkha\.com)$") {
            set $cors_origin $http_origin;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Swagger UI proxy - without trailing slash
    location = /swagger/discount {
        rewrite ^/swagger/discount$ /swagger/discount/ permanent;
    }

    # Direct access to Swagger JSON
    location ~ ^/swagger/discount/swagger(.*)\.json$ {
        proxy_pass http://api:80/swagger$1.json;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint
    location = /health {
        proxy_pass http://api:80/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Don't show health check in logs
        access_log off;
    }

    # API Gateway
    location /api/ {
        # This will be handled by a future API Gateway
        return 404 'API not found';
    }

    # Default route to API documentation
    location = / {
        return 302 /swagger/discount/;
    }

    # Handle direct access to the domain root
    location / {
        try_files $uri $uri/ /swagger/discount/;
    }
    # Error handling
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        return 500 'API server error';
    }
}
